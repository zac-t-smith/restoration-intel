services:
  postgres:
    image: postgres:15.1
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - restoration-net

  supabase-auth:
    image: supabase/gotrue:v2.43.0
    environment:
      GOTRUE_JWT_SECRET: ${JWT_SECRET:?err_no_jwt_secret}
      GOTRUE_DB_DRIVER: postgres
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/postgres
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "9999:9999"
    networks:
      - restoration-net

  fastapi:
    build:
      context: .
      dockerfile: api/Dockerfile
      args:
        - REQUIREMENTS_PATH=requirements.txt # Ensure this is passed
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app/api # Ensure your 'api' directory aligns with Dockerfile's COPY commands
    depends_on:
      postgres:
        condition: service_healthy
      supabase-auth:
        condition: service_started
    environment:
      SUPABASE_URL: postgres://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/postgres
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY:?err_no_anon_key}
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY:?err_no_service_role_key}
    networks:
      - restoration-net
      
  nextjs:
    build:
      context: ./next-app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - fastapi
      - postgres
      - supabase-auth
    environment:
      NEXT_PUBLIC_SUPABASE_URL: postgres://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/postgres
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY:?err_no_anon_key}
      PYTHON_API_URL: http://fastapi:8000
      NODE_ENV: ${NODE_ENV:-development}
    volumes:
      - ./next-app:/app
      - /app/node_modules
      - /app/.next
    networks:
      - restoration-net

networks:
  restoration-net:
    driver: bridge

volumes:
  postgres_data: